{"version":3,"sources":["assets/icons/gmail.svg","assets/icons/github.svg","assets/icons/instagram.svg","components/Loading.js","components/Navigation.js","components/Icons.js","components/Header.js","components/BobaWatch.js","components/WebLink.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","load","loaded","Loading","progress","ld","className","id","style","backgroundSize","Navigation","scroll","useState","opened","toggleMenu","type","aria-label","aria-controls","onClick","href","target","rel","iconOrder","githubIcon","gmailIcon","instagramIcon","Icon","d","backgroundImage","data","img","link","Icons","map","e","key","Header","BobaWatch","props","useSpring","number","from","useEffect","document","documentElement","setProperty","Math","abs","span","interpolate","val","toFixed","WebLink","text","Footer","role","App","localStorage","getItem","setProgress","setScroll","scrollRef","useRef","setTimeout","setItem","getElementById","addEventListener","current","scrollTop","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f77023a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.2382b9b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.d8e2822a.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.ce41af6a.svg\";","import React from 'react';\nimport './styles/Loading.css';\nimport './styles/animations.css';\n\nconst load = (loaded) => { return loaded ? \" ld\": \"\" }\n\n/**\n * @component loadingComponent\n * @param {*} progress \n */\nconst Loading = ({progress}) => {\n    let ld = progress >= 100;\n    return (\n        <div className={`loading-wrapper ${load(ld)}`}>\n            <div className={'loading-content--wrapper' + load(ld)}>\n                <div className=\"loading-content--name\">\n                    <div className=\"glitch\">\n                        RYAN YANG\n                    </div>\n                </div>\n                <div id=\"loading-bar\" style={{backgroundSize: progress + '%'}} className={load(ld)}></div>\n                <div className={'loading-content--position' + load(ld)}> frontend // swe </div>\n            </div>\n        </div>\n    );\n}\nexport default Loading;","import React, {useState, useEffect, useRef} from 'react';\nimport './styles/Navigation.css';\nimport '../assets/libraries/hamburgers.css';\n\n  \nconst Navigation = ({scroll}) => {\n    const [opened, toggleMenu] = useState(false);\n    let toggle = () => {\n        toggleMenu(!opened);\n    }\n    return (\n        <div className={`nav-wrapper ${scroll ? \"mini\" : \"\"} ${opened ? \"open\" : \"\"}`}>\n            <button\n                className={`hamburger hamburger--stand ${opened ? \"is-active\" : \"\"}`}\n                type=\"button\"\n                aria-label=\"Menu\"\n                aria-controls=\"navigation\"\n                onClick={toggle}\n            >\n                <span className=\"hamburger-box\">\n                    <span className={`hamburger-inner ${opened ? \"open\" : \"\"}`}></span>\n                </span>\n            </button> \n            <div className={`nav-content ${opened ? \"open\" : \"\"}`}>\n                <div className=\"nav-content--holder\">\n                    <span>Projects:</span>\n                    <br />\n                    <a href=\"https://info.boba.watch\" target=\"_blank\" rel=\"noopener noreferrer\">boba watch</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport './styles/Icon.css';\nimport gmailIcon from '../assets/icons/gmail.svg';\n// import linkedinIcon from '../assets/icons/linkedin.svg';\nimport githubIcon from '../assets/icons/github.svg';\nimport instagramIcon from '../assets/icons/instagram.svg';\n// import messengerIcon from '../assets/icons/messenger.svg';\n\nconst iconOrder = [\n    {\n        'img': githubIcon,\n        'type': 'github',\n        'link': 'https://github.com/ryqndev'\n    },\n    {\n        'img': gmailIcon,\n        'type': 'gmail',\n        'link': 'mailto:rqyang@uci.edu'\n    },\n    {\n        'img': instagramIcon,\n        'type': 'instagram',\n        'link': 'https://instagram.com/lotsofsbux'\n    }\n];\n\nconst Icons = () => {\n    return iconOrder.map(e => <Icon key={e.type} data={e} />)\n}\nconst Icon = (d) => {\n    return (\n        <a\n            className=\"icon\"\n            style={{backgroundImage: `url('${d.data.img}')`}}\n            aria-label={d.data.type}\n            href={d.data.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n        </a>\n    );\n}\n\nexport default Icons;","import React from 'react';\nimport Icons from './Icons';\nimport './styles/Header.css';\nimport './styles/animations.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header-wrapper\">\n            <div className=\"header-profile\">\n                <div className=\"header-profile--name\">\n                    <div className=\"glitch-small\">\n                        RYAN YANG\n                    </div>\n                    <div className=\"header-icon--wrapper\">\n                        <Icons />\n                    </div>\n                </div>\n            </div>\n            <div className=\"header-image\">\n                <div className=\"header--side-text\">\n                    <span> <b>⟨ ⟨</b>&#160;━ </span>&#160;<i> BOBA WATCH </i> &#160;<span> ━━━ </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React, {useEffect, useState} from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport './styles/BobaWatch.css';\n\nconst BobaWatch = ({scroll}) => {\n    const [state, toggle] = useState(true)\n    const props = useSpring({ number: 13.8, from: { number: 0 } })\n    useEffect(() => {\n        document.documentElement.style.setProperty('--bwatch-scroll', Math.abs(7 - scroll * 0.007));\n    }, [scroll]);\n    return (\n        <div className=\"bwatch--wrapper\">\n            <div className=\"bwatch--description\">\n                <div className=\"bwatch-title--holder\">\n                    <div className=\"bwatch-title--logo\"></div>\n                    <div className=\"bwatch-title\">\n                        boba watch\n                    </div>\n                </div>\n                <div className=\"bwatch-about\">\n                    <span> Founder and lead developer of Boba Watch. </span>\n                    Boba watch is responsive PWA that helps users track, finance, \n                    and control their milk tea drinking habits. I developed \n                    Boba Watch using ReactJS and utilizing service workers \n                    for offline caching of the Firebase backend.\n                </div>\n                <div className=\"bwatch-about-after\">\n\n                </div>\n                <div className=\"bwatch-stats--wrapper\">\n                    <div className=\"bwatch-stats--item\">\n                        <div>\n                            <animated.span>{props.number.interpolate(val => val.toFixed(1))}</animated.span>k+\n                        </div>\n                        <br />\n                        mau\n                    </div>\n                    <div className=\"bwatch-stats--item\">\n                        <div>\n                            400+\n                        </div>\n                        <br />\n                        dau\n                    </div>\n                    <div className=\"bwatch-stats--item\">\n                        <div>\n                            5k+\n                        </div>\n                        <br />\n                        ru\n                    </div>\n                </div>\n            </div>\n            <div className=\"bwatch--device\">\n                <div className=\"bwatch--layers\">\n                    <div id=\"layer-1\" className=\"bwatch-layer\"></div>\n                    <div id=\"layer-2\" className=\"bwatch-layer\"></div>\n                    <div id=\"layer-3\" className=\"bwatch-layer\"></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BobaWatch;","import React from 'react';\nimport './styles/WebLink.css';\n\nconst WebLink = ({text, link}) => {\n    return (\n        <a\n            href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"weblink-link\"\n        >\n            {text}\n        </a>\n    );\n}\n\nexport default WebLink;","import React from 'react';\nimport Icons from './Icons';\nimport WebLink from './WebLink';\nimport './styles/Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-wrapper\">\n            <div className=\"footer-top\">\n                <div className=\"footer-top--name\">\n                    RYAN YANG\n                </div>\n                <div className=\"footer-top--socials\">\n                    <Icons />\n                </div>\n            </div>\n            <div className=\"footer-bottom\">\n                <div className=\"footer-bottom--me\">\n                    <span> me </span>\n                    <br />\n                    <WebLink text=\"instagram\" link=\"https://instagram.com/lotsofsbux\" />\n                    <br />\n                    <WebLink text=\"email\" link=\"mailto:rqyang.uci.edu\" />\n                </div>\n                <div className=\"footer-bottom--projects\">\n                    <span> projects </span>\n                    <br />\n                    <WebLink text=\"boba watch\" link=\"https://info.boba.watch\" />\n\n                </div>\n                <div className=\"footer-bottom--more\">\n                    <span> more </span>\n                    <br />\n                    <WebLink text=\"boba insta\" link=\"https://instagram.com/bingeboba\" />\n                </div>\n            </div>\n            <div className=\"footer-made-with\">\n                Made with <span role=\"img\" aria-label=\"love\">❤️</span> at UCI on sbux <span role=\"img\" aria-label=\"coffee\">☕</span> & boba\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React, {useState, useEffect, useRef} from 'react';\nimport Loading from './components/Loading';\nimport Navigation from './components/Navigation';\nimport Header from './components/Header';\nimport BobaWatch from './components/BobaWatch';\nimport Footer from './components/Footer';\nimport './App.css';\n\n//01010011 00101000 01101000 01100101 00101001 00100000\n//01100010 01100101 00101000 01101100 01101001 01100101\n//00101001 01110110 01100101 00101000 01100100 00101001\n//sbeve\n\nconst App = () => {\n    const [progress, setProgress] = useState(localStorage.getItem('loaded') ? 100 : 1);\n    const [scroll, setScroll] = useState(0);\n    const scrollRef = useRef(setScroll);   \n\n    setTimeout(() => { \n        localStorage.setItem('loaded', true);\n        setProgress(100);\n    }, 3000);\n\n    useEffect(() => {\n        document.getElementById('site-wrapper').addEventListener('scroll', (e) => {\n            scrollRef.current(document.getElementById('site-wrapper').scrollTop);\n        });\n    }, []);\n    return (\n        <div id=\"site-wrapper\" className={(progress >= 100 ? \" ld\" : \"\")}>\n            <Loading progress={progress} />\n            <Navigation scroll={scroll} />\n            <Header />\n            <BobaWatch scroll={scroll} />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}